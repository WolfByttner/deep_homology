{'colour_mode': 'rgb', 'data_path': 'h5images_short/resampled_16x16_directions_32_histnorm', 'epochs': 100, 'momentum': 0.9, 'lr_start': 0.0005, 'lr_ep_step': 5, 'lr_adaption': 0.5, 'test_ratio': 0.1, 'batch_size': 8, 'directions': 32, 'resampled_size': (16, 16), 'sat_key': '100_epoch_lr_00005_quick_lr_2_convs_dense_linear_one_layer_AdaptiveMaxPool32_shore', 'cuda': False}
Data setup...
Loading providers
Merging providers
Create data loader...
Creating network
['dim_0_dir_0_red', 'dim_0_dir_1_red', 'dim_0_dir_10_red', 'dim_0_dir_11_red', 'dim_0_dir_12_red', 'dim_0_dir_13_red', 'dim_0_dir_14_red', 'dim_0_dir_15_red', 'dim_0_dir_16_red', 'dim_0_dir_17_red', 'dim_0_dir_18_red', 'dim_0_dir_19_red', 'dim_0_dir_2_red', 'dim_0_dir_20_red', 'dim_0_dir_21_red', 'dim_0_dir_22_red', 'dim_0_dir_23_red', 'dim_0_dir_24_red', 'dim_0_dir_25_red', 'dim_0_dir_26_red', 'dim_0_dir_27_red', 'dim_0_dir_28_red', 'dim_0_dir_29_red', 'dim_0_dir_3_red', 'dim_0_dir_30_red', 'dim_0_dir_31_red', 'dim_0_dir_4_red', 'dim_0_dir_5_red', 'dim_0_dir_6_red', 'dim_0_dir_7_red', 'dim_0_dir_8_red', 'dim_0_dir_9_red', 'dim_0_dir_0_green', 'dim_0_dir_1_green', 'dim_0_dir_10_green', 'dim_0_dir_11_green', 'dim_0_dir_12_green', 'dim_0_dir_13_green', 'dim_0_dir_14_green', 'dim_0_dir_15_green', 'dim_0_dir_16_green', 'dim_0_dir_17_green', 'dim_0_dir_18_green', 'dim_0_dir_19_green', 'dim_0_dir_2_green', 'dim_0_dir_20_green', 'dim_0_dir_21_green', 'dim_0_dir_22_green', 'dim_0_dir_23_green', 'dim_0_dir_24_green', 'dim_0_dir_25_green', 'dim_0_dir_26_green', 'dim_0_dir_27_green', 'dim_0_dir_28_green', 'dim_0_dir_29_green', 'dim_0_dir_3_green', 'dim_0_dir_30_green', 'dim_0_dir_31_green', 'dim_0_dir_4_green', 'dim_0_dir_5_green', 'dim_0_dir_6_green', 'dim_0_dir_7_green', 'dim_0_dir_8_green', 'dim_0_dir_9_green', 'dim_0_dir_0_blue', 'dim_0_dir_1_blue', 'dim_0_dir_10_blue', 'dim_0_dir_11_blue', 'dim_0_dir_12_blue', 'dim_0_dir_13_blue', 'dim_0_dir_14_blue', 'dim_0_dir_15_blue', 'dim_0_dir_16_blue', 'dim_0_dir_17_blue', 'dim_0_dir_18_blue', 'dim_0_dir_19_blue', 'dim_0_dir_2_blue', 'dim_0_dir_20_blue', 'dim_0_dir_21_blue', 'dim_0_dir_22_blue', 'dim_0_dir_23_blue', 'dim_0_dir_24_blue', 'dim_0_dir_25_blue', 'dim_0_dir_26_blue', 'dim_0_dir_27_blue', 'dim_0_dir_28_blue', 'dim_0_dir_29_blue', 'dim_0_dir_3_blue', 'dim_0_dir_30_blue', 'dim_0_dir_31_blue', 'dim_0_dir_4_blue', 'dim_0_dir_5_blue', 'dim_0_dir_6_blue', 'dim_0_dir_7_blue', 'dim_0_dir_8_blue', 'dim_0_dir_9_blue']
Creating trainer
Running training
                                                  Epoch 1/100 Batch 1/9 (11.11 %)                                                  Epoch 1/100 Batch 2/9 (22.22 %)                                                  Epoch 1/100 Batch 3/9 (33.33 %)                                                  Epoch 1/100 Batch 4/9 (44.44 %)                                                  Epoch 1/100 Batch 5/9 (55.56 %)                                                  Epoch 1/100 Batch 6/9 (66.67 %)                                                  Epoch 1/100 Batch 7/9 (77.78 %)                                                  Epoch 1/100 Batch 8/9 (88.89 %)                                                  Epoch 1/100 Batch 9/9 (100.00 %)
testing... tensor([[ 0.0239,  0.0768, -0.0374,  ..., -0.0600, -0.0516,  0.0040],
        [ 0.0239,  0.0768, -0.0374,  ..., -0.0600, -0.0516,  0.0040],
        [ 0.0239,  0.0768, -0.0374,  ..., -0.0600, -0.0516,  0.0040],
        ...,
        [ 0.0239,  0.0768, -0.0374,  ..., -0.0600, -0.0516,  0.0040],
        [ 0.0239,  0.0768, -0.0374,  ..., -0.0600, -0.0516,  0.0040],
        [ 0.0239,  0.0768, -0.0374,  ..., -0.0600, -0.0516,  0.0040]])
tensor([[ 0.0239,  0.0768, -0.0374,  ..., -0.0600, -0.0516,  0.0040],
        [ 0.0239,  0.0768, -0.0374,  ..., -0.0600, -0.0516,  0.0040],
        [ 0.0239,  0.0768, -0.0374,  ..., -0.0600, -0.0516,  0.0040],
        ...,
        [ 0.0239,  0.0768, -0.0374,  ..., -0.0600, -0.0516,  0.0040],
        [ 0.0239,  0.0768, -0.0374,  ..., -0.0600, -0.0516,  0.0040],
        [ 0.0239,  0.0768, -0.0374,  ..., -0.0600, -0.0516,  0.0040]])
tensor([[ 0.0239,  0.0768, -0.0374,  ..., -0.0600, -0.0516,  0.0040],
        [ 0.0239,  0.0768, -0.0374,  ..., -0.0600, -0.0516,  0.0040],
        [ 0.0239,  0.0768, -0.0374,  ..., -0.0600, -0.0516,  0.0040],
        ...,
        [ 0.0239,  0.0768, -0.0374,  ..., -0.0600, -0.0516,  0.0040],
        [ 0.0239,  0.0768, -0.0374,  ..., -0.0600, -0.0516,  0.0040],
        [ 0.0239,  0.0768, -0.0374,  ..., -0.0600, -0.0516,  0.0040]])
tensor([[ 0.0239,  0.0768, -0.0374,  ..., -0.0600, -0.0516,  0.0040],
        [ 0.0239,  0.0768, -0.0374,  ..., -0.0600, -0.0516,  0.0040],
        [ 0.0239,  0.0768, -0.0374,  ..., -0.0600, -0.0516,  0.0040],
        ...,
        [ 0.0239,  0.0768, -0.0374,  ..., -0.0600, -0.0516,  0.0040],
        [ 0.0239,  0.0768, -0.0374,  ..., -0.0600, -0.0516,  0.0040],
        [ 0.0239,  0.0768, -0.0374,  ..., -0.0600, -0.0516,  0.0040]])
tensor([[ 0.0239,  0.0768, -0.0374,  ..., -0.0600, -0.0516,  0.0040],
        [ 0.0239,  0.0768, -0.0374,  ..., -0.0600, -0.0516,  0.0040],
        [ 0.0239,  0.0768, -0.0374,  ..., -0.0600, -0.0516,  0.0040],
        ...,
        [ 0.0239,  0.0768, -0.0374,  ..., -0.0600, -0.0516,  0.0040],
        [ 0.0239,  0.0768, -0.0374,  ..., -0.0600, -0.0516,  0.0040],
        [ 0.0239,  0.0768, -0.0374,  ..., -0.0600, -0.0516,  0.0040]])
tensor([[ 2.3906e-02,  7.6787e-02, -3.7420e-02,  7.2930e-02, -2.7907e-02,
          4.3155e-02,  4.5848e-02, -3.2150e-02,  3.8927e-02, -3.4383e-02,
         -2.9888e-03,  4.2600e-02,  5.1038e-03,  4.8748e-03,  4.9712e-02,
          8.7604e-02,  4.7116e-02,  7.1771e-02, -1.5413e-02, -8.7021e-03,
         -2.9618e-03, -7.7274e-02, -8.5404e-03,  7.8022e-03,  6.9186e-02,
          2.1794e-02,  1.2844e-02,  3.8367e-02, -4.7156e-02, -1.5242e-02,
         -4.7818e-02, -5.8927e-02,  6.3526e-02,  7.1459e-02, -3.5195e-02,
          5.7526e-02, -4.3633e-02,  6.8249e-02, -3.5978e-02,  2.0543e-02,
          8.0232e-02,  6.6169e-04,  5.8456e-02,  5.2565e-02,  5.3797e-02,
         -4.0234e-02,  3.1930e-02,  6.7794e-02,  3.6587e-02, -2.4258e-02,
         -3.1717e-02, -4.6414e-02, -4.1923e-02, -1.1894e-02, -4.1176e-02,
         -3.3867e-02, -3.2252e-02,  1.5810e-02,  1.8898e-02,  3.1492e-02,
         -5.3471e-02, -2.9525e-02, -5.6830e-02,  1.1090e-02,  4.8379e-02,
         -1.7189e-03, -1.1989e-02, -4.4618e-02,  2.6808e-03, -4.8016e-02,
          3.7019e-02,  1.3929e-03, -1.5889e-02, -1.2730e-02,  4.8817e-02,
          2.5008e-02,  1.9022e-02, -1.6124e-03,  4.4232e-03,  5.6158e-02,
          7.3673e-03, -5.8083e-02, -2.9773e-02, -3.5924e-02,  3.0935e-02,
          1.0714e-03, -3.0320e-03, -4.4388e-02,  5.3357e-02,  2.1596e-02,
         -4.6902e-02,  3.7131e-02, -4.3357e-02, -1.8882e-02,  1.0437e-02,
          5.5068e-02, -1.0617e-04, -4.1483e-02, -1.5054e-02,  5.9899e-02,
         -5.2396e-02, -6.7791e-02,  8.0008e-05,  3.7495e-02, -2.9282e-02,
         -5.0155e-03,  2.9636e-02,  6.9601e-02, -3.7941e-02,  7.9815e-02,
         -6.6788e-02,  9.2653e-03,  4.4027e-02, -4.5680e-03,  1.8529e-02,
          6.7953e-03, -3.8167e-03,  1.2346e-02, -4.4856e-02, -4.5912e-02,
          1.8848e-02, -6.1059e-02,  8.7163e-02, -3.3395e-02, -5.3878e-02,
         -8.4678e-03, -4.4664e-02,  3.8397e-02,  6.0049e-02,  3.4995e-02,
          4.7354e-02,  4.8920e-02,  8.2307e-03, -7.3136e-02, -4.1129e-02,
         -1.6024e-02,  2.2293e-02, -6.4807e-02, -1.7485e-02,  1.1819e-02,
          6.7457e-02,  2.6841e-02, -4.5984e-02,  7.7279e-03,  2.7921e-02,
         -6.0747e-02, -6.5539e-03, -1.7957e-02, -7.0591e-02,  1.4619e-02,
         -2.7553e-02,  2.0715e-02,  4.5840e-02,  1.8329e-02,  9.1354e-03,
         -3.7196e-02,  4.7120e-02, -3.5597e-03, -1.3356e-03,  1.7045e-02,
         -3.7457e-02,  2.8558e-02,  3.0990e-02,  3.9768e-02, -5.1427e-02,
         -1.4067e-02, -8.2536e-02,  3.2199e-03, -4.7953e-02,  4.6699e-02,
         -1.0290e-02, -3.3546e-02, -1.6691e-02,  1.5088e-02,  1.5759e-02,
          6.0814e-02,  3.5009e-02,  6.1233e-02,  8.5908e-02, -1.0021e-02,
          4.9526e-02,  6.6645e-02,  2.8039e-02, -2.9573e-02,  3.5834e-02,
          5.3371e-02,  5.3367e-02, -3.2178e-02,  2.3118e-02, -2.7082e-02,
         -6.3567e-02, -3.0551e-02, -2.3776e-02,  4.1666e-02, -6.1920e-02,
         -1.8838e-02,  6.6870e-02, -6.0038e-02, -5.1614e-02,  4.0183e-03],
        [ 2.3906e-02,  7.6787e-02, -3.7420e-02,  7.2930e-02, -2.7907e-02,
          4.3155e-02,  4.5848e-02, -3.2150e-02,  3.8927e-02, -3.4383e-02,
         -2.9888e-03,  4.2600e-02,  5.1038e-03,  4.8748e-03,  4.9712e-02,
          8.7604e-02,  4.7116e-02,  7.1771e-02, -1.5413e-02, -8.7022e-03,
         -2.9618e-03, -7.7274e-02, -8.5404e-03,  7.8022e-03,  6.9186e-02,
          2.1794e-02,  1.2844e-02,  3.8367e-02, -4.7156e-02, -1.5242e-02,
         -4.7818e-02, -5.8927e-02,  6.3526e-02,  7.1459e-02, -3.5195e-02,
          5.7526e-02, -4.3633e-02,  6.8249e-02, -3.5978e-02,  2.0543e-02,
          8.0232e-02,  6.6169e-04,  5.8456e-02,  5.2565e-02,  5.3797e-02,
         -4.0234e-02,  3.1930e-02,  6.7794e-02,  3.6587e-02, -2.4258e-02,
         -3.1717e-02, -4.6414e-02, -4.1923e-02, -1.1894e-02, -4.1176e-02,
         -3.3867e-02, -3.2252e-02,  1.5810e-02,  1.8898e-02,  3.1492e-02,
         -5.3471e-02, -2.9525e-02, -5.6830e-02,  1.1090e-02,  4.8379e-02,
         -1.7189e-03, -1.1989e-02, -4.4618e-02,  2.6808e-03, -4.8016e-02,
          3.7019e-02,  1.3929e-03, -1.5889e-02, -1.2730e-02,  4.8817e-02,
          2.5008e-02,  1.9022e-02, -1.6124e-03,  4.4232e-03,  5.6158e-02,
          7.3673e-03, -5.8083e-02, -2.9773e-02, -3.5924e-02,  3.0935e-02,
          1.0714e-03, -3.0320e-03, -4.4388e-02,  5.3357e-02,  2.1596e-02,
         -4.6902e-02,  3.7131e-02, -4.3357e-02, -1.8882e-02,  1.0437e-02,
          5.5068e-02, -1.0617e-04, -4.1483e-02, -1.5054e-02,  5.9899e-02,
         -5.2396e-02, -6.7791e-02,  8.0008e-05,  3.7495e-02, -2.9282e-02,
         -5.0155e-03,  2.9636e-02,  6.9601e-02, -3.7941e-02,  7.9815e-02,
         -6.6788e-02,  9.2653e-03,  4.4027e-02, -4.5680e-03,  1.8529e-02,
          6.7953e-03, -3.8167e-03,  1.2346e-02, -4.4856e-02, -4.5912e-02,
          1.8848e-02, -6.1059e-02,  8.7163e-02, -3.3395e-02, -5.3878e-02,
         -8.4678e-03, -4.4664e-02,  3.8397e-02,  6.0049e-02,  3.4995e-02,
          4.7354e-02,  4.8920e-02,  8.2307e-03, -7.3136e-02, -4.1129e-02,
         -1.6024e-02,  2.2293e-02, -6.4807e-02, -1.7485e-02,  1.1819e-02,
          6.7457e-02,  2.6841e-02, -4.5984e-02,  7.7279e-03,  2.7921e-02,
         -6.0747e-02, -6.5539e-03, -1.7957e-02, -7.0591e-02,  1.4619e-02,
         -2.7553e-02,  2.0715e-02,  4.5840e-02,  1.8329e-02,  9.1354e-03,
         -3.7196e-02,  4.7120e-02, -3.5597e-03, -1.3356e-03,  1.7045e-02,
         -3.7457e-02,  2.8558e-02,  3.0990e-02,  3.9768e-02, -5.1427e-02,
         -1.4067e-02, -8.2536e-02,  3.2199e-03, -4.7953e-02,  4.6699e-02,
         -1.0290e-02, -3.3546e-02, -1.6691e-02,  1.5088e-02,  1.5759e-02,
          6.0814e-02,  3.5009e-02,  6.1233e-02,  8.5908e-02, -1.0021e-02,
          4.9526e-02,  6.6645e-02,  2.8039e-02, -2.9573e-02,  3.5834e-02,
          5.3371e-02,  5.3367e-02, -3.2178e-02,  2.3118e-02, -2.7082e-02,
         -6.3567e-02, -3.0551e-02, -2.3776e-02,  4.1666e-02, -6.1920e-02,
         -1.8838e-02,  6.6870e-02, -6.0038e-02, -5.1614e-02,  4.0183e-03]])
Traceback (most recent call last):
  File "slayer_network_rgb.py", line 432, in <module>
    mean = train_network(params)
  File "slayer_network_rgb.py", line 397, in train_network
    trainer.run()
  File "/home/amahon/research/deep_homology/chofer_nips2017/chofer_torchex/chofer_torchex/utils/trainer/trainer.py", line 93, in run
    self.events.post_epoch(self._get_default_event_kwargs(), trainer=self)
  File "/home/amahon/research/deep_homology/chofer_nips2017/chofer_torchex/chofer_torchex/utils/trainer/trainer.py", line 18, in __call__
    callback(**kwargs)
  File "/home/amahon/research/deep_homology/chofer_nips2017/chofer_torchex/chofer_torchex/utils/trainer/plugins/scores.py", line 63, in post_epoch_handler
    labels=self._test_data.dataset.labels)
  File "/home/amahon/.local/lib/python3.7/site-packages/sklearn/metrics/classification.py", line 1764, in log_loss
    check_consistent_length(y_pred, y_true, sample_weight)
  File "/home/amahon/.local/lib/python3.7/site-packages/sklearn/utils/validation.py", line 235, in check_consistent_length
    " samples: %r" % [int(l) for l in lengths])
ValueError: Found input variables with inconsistent numbers of samples: [8400, 42]
