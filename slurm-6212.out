{'colour_mode': 'rgb', 'data_path': 'h5images/resampled_16x16_directions_32_histnorm', 'epochs': 100, 'momentum': 0.9, 'lr_start': 0.0005, 'lr_ep_step': 5, 'lr_adaption': 0.5, 'test_ratio': 0.1, 'batch_size': 8, 'directions': 32, 'resampled_size': (16, 16), 'sat_key': '100_epoch_lr_00005_quick_lr_2_convs_dense_linear_one_layer_AdaptiveMaxPool2d5', 'cuda': False}
Data setup...
Loading providers
Merging providers
Create data loader...
Creating network
['dim_0_dir_0_red', 'dim_0_dir_1_red', 'dim_0_dir_10_red', 'dim_0_dir_11_red', 'dim_0_dir_12_red', 'dim_0_dir_13_red', 'dim_0_dir_14_red', 'dim_0_dir_15_red', 'dim_0_dir_16_red', 'dim_0_dir_17_red', 'dim_0_dir_18_red', 'dim_0_dir_19_red', 'dim_0_dir_2_red', 'dim_0_dir_20_red', 'dim_0_dir_21_red', 'dim_0_dir_22_red', 'dim_0_dir_23_red', 'dim_0_dir_24_red', 'dim_0_dir_25_red', 'dim_0_dir_26_red', 'dim_0_dir_27_red', 'dim_0_dir_28_red', 'dim_0_dir_29_red', 'dim_0_dir_3_red', 'dim_0_dir_30_red', 'dim_0_dir_31_red', 'dim_0_dir_4_red', 'dim_0_dir_5_red', 'dim_0_dir_6_red', 'dim_0_dir_7_red', 'dim_0_dir_8_red', 'dim_0_dir_9_red', 'dim_0_dir_0_green', 'dim_0_dir_1_green', 'dim_0_dir_10_green', 'dim_0_dir_11_green', 'dim_0_dir_12_green', 'dim_0_dir_13_green', 'dim_0_dir_14_green', 'dim_0_dir_15_green', 'dim_0_dir_16_green', 'dim_0_dir_17_green', 'dim_0_dir_18_green', 'dim_0_dir_19_green', 'dim_0_dir_2_green', 'dim_0_dir_20_green', 'dim_0_dir_21_green', 'dim_0_dir_22_green', 'dim_0_dir_23_green', 'dim_0_dir_24_green', 'dim_0_dir_25_green', 'dim_0_dir_26_green', 'dim_0_dir_27_green', 'dim_0_dir_28_green', 'dim_0_dir_29_green', 'dim_0_dir_3_green', 'dim_0_dir_30_green', 'dim_0_dir_31_green', 'dim_0_dir_4_green', 'dim_0_dir_5_green', 'dim_0_dir_6_green', 'dim_0_dir_7_green', 'dim_0_dir_8_green', 'dim_0_dir_9_green', 'dim_0_dir_0_blue', 'dim_0_dir_1_blue', 'dim_0_dir_10_blue', 'dim_0_dir_11_blue', 'dim_0_dir_12_blue', 'dim_0_dir_13_blue', 'dim_0_dir_14_blue', 'dim_0_dir_15_blue', 'dim_0_dir_16_blue', 'dim_0_dir_17_blue', 'dim_0_dir_18_blue', 'dim_0_dir_19_blue', 'dim_0_dir_2_blue', 'dim_0_dir_20_blue', 'dim_0_dir_21_blue', 'dim_0_dir_22_blue', 'dim_0_dir_23_blue', 'dim_0_dir_24_blue', 'dim_0_dir_25_blue', 'dim_0_dir_26_blue', 'dim_0_dir_27_blue', 'dim_0_dir_28_blue', 'dim_0_dir_29_blue', 'dim_0_dir_3_blue', 'dim_0_dir_30_blue', 'dim_0_dir_31_blue', 'dim_0_dir_4_blue', 'dim_0_dir_5_blue', 'dim_0_dir_6_blue', 'dim_0_dir_7_blue', 'dim_0_dir_8_blue', 'dim_0_dir_9_blue']
Creating trainer
Running training
tensor([[[0.7009, 0.7009, 0.7009,  ..., 0.7009, 0.7009, 0.7009],
         [1.2627, 1.2627, 1.2627,  ..., 1.2627, 1.2627, 1.2627],
         [1.0636, 1.0636, 1.0636,  ..., 1.0636, 1.0636, 1.0636],
         ...,
         [1.5670, 1.5670, 1.5670,  ..., 1.5670, 1.5670, 1.5670],
         [1.3885, 1.3885, 1.3885,  ..., 1.3885, 1.3885, 1.3885],
         [0.5937, 0.5937, 0.5937,  ..., 0.5937, 0.5937, 0.5937]],

        [[0.9018, 0.9018, 0.9018,  ..., 0.9018, 0.9018, 0.9018],
         [1.2500, 1.2500, 1.2500,  ..., 1.2500, 1.2500, 1.2500],
         [0.7276, 0.7276, 0.7276,  ..., 0.7276, 0.7276, 0.7276],
         ...,
         [0.5217, 0.5217, 0.5217,  ..., 0.5217, 0.5217, 0.5217],
         [1.4275, 1.4275, 1.4275,  ..., 1.4275, 1.4275, 1.4275],
         [1.0102, 1.0102, 1.0102,  ..., 1.0102, 1.0102, 1.0102]],

        [[0.9448, 0.9448, 0.9448,  ..., 0.9448, 0.9448, 0.9448],
         [0.6293, 0.6293, 0.6293,  ..., 0.6293, 0.6293, 0.6293],
         [0.5961, 0.5961, 0.5961,  ..., 0.5961, 0.5961, 0.5961],
         ...,
         [1.4198, 1.4198, 1.4198,  ..., 1.4198, 1.4198, 1.4198],
         [0.5634, 0.5634, 0.5634,  ..., 0.5634, 0.5634, 0.5634],
         [0.9894, 0.9894, 0.9894,  ..., 0.9894, 0.9894, 0.9894]],

        ...,

        [[0.9091, 0.9091, 0.9091,  ..., 0.9091, 0.9091, 0.9091],
         [1.0534, 1.0534, 1.0534,  ..., 1.0534, 1.0534, 1.0534],
         [1.1451, 1.1451, 1.1451,  ..., 1.1451, 1.1451, 1.1451],
         ...,
         [0.7429, 0.7429, 0.7429,  ..., 0.7429, 0.7429, 0.7429],
         [0.9288, 0.9288, 0.9288,  ..., 0.9288, 0.9288, 0.9288],
         [0.9085, 0.9085, 0.9085,  ..., 0.9085, 0.9085, 0.9085]],

        [[1.3154, 1.3154, 1.3154,  ..., 1.3154, 1.3154, 1.3154],
         [1.9701, 1.9701, 1.9701,  ..., 1.9701, 1.9701, 1.9701],
         [1.2830, 1.2830, 1.2830,  ..., 1.2830, 1.2830, 1.2830],
         ...,
         [0.9027, 0.9027, 0.9027,  ..., 0.9027, 0.9027, 0.9027],
         [1.4225, 1.4225, 1.4225,  ..., 1.4225, 1.4225, 1.4225],
         [1.8370, 1.8370, 1.8370,  ..., 1.8370, 1.8370, 1.8370]],

        [[0.9245, 0.9245, 0.9245,  ..., 0.9245, 0.9245, 0.9245],
         [0.9755, 0.9755, 0.9755,  ..., 0.9755, 0.9755, 0.9755],
         [0.7281, 0.7281, 0.7281,  ..., 0.7281, 0.7281, 0.7281],
         ...,
         [0.6497, 0.6497, 0.6497,  ..., 0.6497, 0.6497, 0.6497],
         [0.8464, 0.8464, 0.8464,  ..., 0.8464, 0.8464, 0.8464],
         [1.0886, 1.0886, 1.0886,  ..., 1.0886, 1.0886, 1.0886]]],
       grad_fn=<SqueezeBackward1>)
Traceback (most recent call last):
  File "slayer_network_rgb.py", line 432, in <module>
    mean = train_network(params)
  File "slayer_network_rgb.py", line 397, in train_network
    trainer.run()
  File "/home/amahon/research/deep_homology/chofer_nips2017/chofer_torchex/chofer_torchex/utils/trainer/trainer.py", line 92, in run
    self._train_epoch()
  File "/home/amahon/research/deep_homology/chofer_nips2017/chofer_torchex/chofer_torchex/utils/trainer/trainer.py", line 129, in _train_epoch
    self.optimizer.step(closure)
  File "/home/amahon/.local/lib/python3.7/site-packages/torch/optim/sgd.py", line 80, in step
    loss = closure()
  File "/home/amahon/research/deep_homology/chofer_nips2017/chofer_torchex/chofer_torchex/utils/trainer/trainer.py", line 119, in closure
    loss = self.criterion(batch_output, target_var)
  File "/home/amahon/.local/lib/python3.7/site-packages/torch/nn/modules/module.py", line 493, in __call__
    result = self.forward(*input, **kwargs)
  File "/home/amahon/.local/lib/python3.7/site-packages/torch/nn/modules/loss.py", line 942, in forward
    ignore_index=self.ignore_index, reduction=self.reduction)
  File "/home/amahon/.local/lib/python3.7/site-packages/torch/nn/functional.py", line 2056, in cross_entropy
    return nll_loss(log_softmax(input, 1), target, weight, None, ignore_index, None, reduction)
  File "/home/amahon/.local/lib/python3.7/site-packages/torch/nn/functional.py", line 1881, in nll_loss
    out_size, target.size()))
ValueError: Expected target size (8, 200), got torch.Size([8])
